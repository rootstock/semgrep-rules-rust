rules:
  - id: rust-security-debug-mode-enabled
    message: >-
      Debug mode appears to be enabled. In a production environment, debug mode can
      expose sensitive information and should be disabled. This is a placeholder rule;
      you may need to adapt it to your project's specific configuration format.
    languages:
      - rust
    severity: WARNING
    patterns:
      - pattern: "debug_mode = true"

  - id: insecure-configuration-overly-permissive-cors
    message: >-
      An overly permissive CORS policy is being used (e.g., allowing any origin).
      This can expose your application to cross-site request forgery (CSRF) attacks.
      Restrict the allowed origins to a specific list of trusted domains.
    languages:
      - rust
    severity: WARNING
    patterns:
      - pattern-either:
          - pattern: $CORS.allow_origin(cors::Any)
          - pattern: $CORS.allow_any_origin()
          - pattern: $RESPONSE.header("Access-Control-Allow-Origin", "*")

  - id: rust-alloy-hardcoded-rpc-url
    message: >-
      A hardcoded RPC URL was found. It is better practice to manage RPC URLs through
      a configuration file or environment variables, especially to avoid committing
      them to version control.
    languages:
      - rust
    severity: WARNING
    patterns:
      - pattern-regex: 'https://(mainnet|sepolia|goerli)\.infura\.io/v3/[a-zA-Z0-9]+'

  - id: insecure-configuration-insecure-cookie-flags
    message: >-
      A cookie is being created without the `Secure`, `HttpOnly`, and `SameSite` flags.
      These flags are crucial for protecting cookies from theft and misuse. The `Secure`
      flag ensures the cookie is only sent over HTTPS, `HttpOnly` prevents JavaScript
      from accessing it, and `SameSite` protects against CSRF attacks.
    languages:
      - rust
    severity: WARNING
    patterns:
      - pattern: Cookie::new("$NAME", "$VALUE")
      - pattern-not: |
          Cookie::new("$NAME", "$VALUE")
            .secure(true)
            .http_only(true)
            .same_site(SameSite::Strict)
